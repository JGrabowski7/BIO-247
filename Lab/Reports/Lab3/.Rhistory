theme(legend.position = "none")
veg %>%
filter(species=="Native seed mix")%>%
ggplot(aes(x = tx_soil, y = cover_class_med)) +
geom_point(shape = 15, size = 2, color = "green", position = position_jitter(0.05) ) +
xlab("Soil Treatment") +
ylab("Cover (%)") +
scale_y_continuous(breaks =c(0, 25, 50, 75, 100), limits=c(-1, 100)) +
theme_classic() +
theme(legend.position = "none")
veg %>%
filter(species=="Native seed mix")%>%
ggplot(aes(x = tx_soil, y = cover_class_med)) +
geom_point(shape = 15, size = 2, color = "green", position = position_jitter(0.05) ) +
xlab("Soil Treatment") +
ylab("Cover (%)") +
scale_y_continuous(breaks =c(0, 25, 50, 75, 100), limits=c(-1, 100)) +
theme_classic() +
theme(legend.position = "none")
veg %>%
filter(species=="Native seed mix")%>%
ggplot(aes(x = tx_soil, y = cover_class_med)) +
geom_point(shape = 15, size = 2, color = "green", position = position_jitter(0.05) ) +
xlab("Soil Treatment") +
ylab("Cover (%)") +
scale_y_continuous(breaks =c(0, 25, 50, 75, 100), limits=c(-1, 100)) +
theme_classic() +
theme(legend.position = "none")
veg %>%
filter(species=="Native seed mix")%>%
ggplot(aes(x = tx_soil, y = cover_class_med)) +
geom_point(shape = 15, size = 2, color = "green", position = position_jitter(0.05) ) +
xlab("Soil Treatment") +
ylab("Cover (%)") +
scale_y_continuous(breaks =c(0, 25, 50, 75, 100), limits=c(-1, 100)) +
theme_classic() +
theme(legend.position = "none")
veg %>%
filter(species=="Native seed mix")%>%
ggplot(aes(x = tx_soil, y = cover_class_med)) +
geom_point(shape = 15, size = 2, color = "green", position = position_jitter(0.05) ) +
xlab("Soil Treatment") +
ylab("Cover (%)") +
scale_y_continuous(breaks =c(0, 25, 50, 75, 100), limits=c(-1, 100)) +
theme_classic() +
theme(legend.position = "none")
veg %>%
filter(species=="Native seed mix")%>%
ggplot(aes(x = tx_soil, y = cover_class_med)) +
geom_point(shape = 15, size = 2, color = "green", position = position_jitter(0.05) ) +
xlab("Soil Treatment") +
ylab("Cover (%)") +
scale_y_continuous(breaks =c(0, 25, 50, 75, 100), limits=c(-1, 100)) +
theme_classic() +
theme(legend.position = "none")
veg %>%
filter(species=="Native seed mix")%>%
ggplot(aes(x = tx_soil, y = cover_class_med)) +
geom_point(shape = 15, size = 2, color = "green", position = position_jitter(0.05) ) +
xlab("Soil Treatment") +
ylab("Cover (%)") +
scale_y_continuous(breaks =c(0, 25, 50, 75, 100), limits=c(-1, 100)) +
theme_classic() +
theme(legend.position = "none")
veg %>%
filter(species=="Native seed mix")%>%
ggplot(aes(x = tx_soil, y = cover_class_med)) +
geom_point(shape = 15, size = 2, color = "green", position = position_jitter(0.1) ) +
xlab("Soil Treatment") +
ylab("Cover (%)") +
scale_y_continuous(breaks =c(0, 25, 50, 75, 100), limits=c(-1, 100)) +
theme_classic() +
theme(legend.position = "none")
levels(veg$species)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(FSA)
veg <- read.csv("Marianna Project/Marianna Veg Data.csv",
stringsAsFactors = TRUE)
veg$tx_soil_code <- as.factor(veg$tx_soil_code)
vegLBSonly<-filter(veg,species=="Schizachyrium scoparium")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(height ~ tx_soil)
dunnTest(vegLBSonly$height ~ vegLBSonly$tx_soil, method = "bh")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegLBSonly$abundance ~ vegLBSonly$tx_soil, method = "bh")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegLBSonly$height ~ vegLBSonly$tx_soil, method = "bh")
dunnTest(vegLBSonly$cover_class_med  ~ vegLBSonly$tx_soil, method = "bh")
vegLavonly <- filter(veg,species=="Lavandula sp.")
veg %>%
filter(species=="Lavandula sp.")%>%
kruskal.test(height ~ tx_soil)
dunnTest(vegLavonly$height ~ vegLavonly$tx_soil, method = "bh")
veg %>%
filter(species=="Lavandula sp.")%>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegLavonly$abundance ~ vegLavonly$tx_soil, method = "bh")
veg %>%
filter(species=="Lavandula sp.")%>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegLavonly$height ~ vegLavonly$tx_soil, method = "bh")
dunnTest(vegLavonly$cover_class_med  ~ vegLavonly$tx_soil, method = "bh")
dunnTest(vegLavonly$abundance ~ vegLavonly$tx_soil, method = "bh")
vegAnnonly <- filter(veg,species=="Festuca pratensis")
veg %>%
filter(species=="Festuca pratensis")%>%
kruskal.test(height ~ tx_soil)
dunnTest(vegAnnonly$height ~ vegAnnonly$tx_soil, method = "bh")
veg %>%
filter(species=="Festuca pratensis")%>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegAnnonly$abundance ~ vegAnnonly$tx_soil, method = "bh")
veg %>%
filter(species=="Festuca pratensis")%>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegAnnonly$cover_class_med ~ vegAnnonly$tx_soil, method = "bh")
vegMixonly <- filter(veg,species=="Native seed mix")
veg %>%
filter(species=="Native seed mix")%>%
kruskal.test(abundance ~ tx_soil)
vegMixonly %>%
kruskal.test(abundance ~ tx_soil)
vegAnnonly%>%
kruskal.test(height ~ tx_soil)
veg %>%
filter(species=="Festuca pratensis")%>%
kruskal.test(height ~ tx_soil)
vegMixonly <- na.omit(vegMixonly)
View(vegMixonly)
veg %>%
filter(species=="Native seed mix")%>%
kruskal.test(abundance ~ tx_soil)
vegMixonly <- filter(veg,species=="Native seed mix")
vegMixonly <- vegMixOnly[, 1,2,3,4,5,6,7,9,10,11,12,13]
vegMixonly <- vegMixonly[, 1,2,3,4,5,6,7,9,10,11,12,13]
vegMixonly <- filter(veg,species=="Native seed mix")
vegMixonly <- vegMixonly[, c(1,2,3,4,5,6,7,9,10,11,12,13)]
vegMixonly <- filter(veg,species=="Native seed mix")
vegMixonly <- filter(veg,species=="Native seed mix")
vegMixonly <- vegMixonly[, c(1,2,3,4,5,6,8,,10,11,12,13)]
vegMixonly <- filter(veg,species=="Native seed mix")
vegMixonly <- vegMixonly[, c(1,2,3,4,5,6,8,10,11,12,13)]
vegMixonly %>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegMixonly$abundance ~ vegMixonly$tx_soil, method = "bh")
dunnTest(vegMixonly$cover_class_med ~ vegMixonly$tx_soil, method = "bh")
vegMixonly %>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegMixonly$cover_class_med ~ vegMixonly$tx_soil, method = "bh")
vegMixonly <- filter(veg,species=="Native seed mix")
vegMixonly <- vegMixonly[, c(1,2,3,4,5,6,8,10,11,12,13)]
vegMixonly %>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegMixonly$abundance ~ vegMixonly$tx_soil, method = "bh")
vegMixonly %>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegMixonly$cover_class_med ~ vegMixonly$tx_soil, method = "bh")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(FSA)
veg <- read.csv("Marianna Project/Marianna Veg Data.csv",
stringsAsFactors = TRUE)
veg$tx_soil_code <- as.factor(veg$tx_soil_code)
vegLBSonly<-filter(veg,species=="Schizachyrium scoparium")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(height ~ tx_soil)
dunnTest(vegLBSonly$height ~ vegLBSonly$tx_soil, method = "bh")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegLBSonly$abundance ~ vegLBSonly$tx_soil, method = "bh")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegLBSonly$cover_class_med  ~ vegLBSonly$tx_soil, method = "bh")
vegLavonly <- filter(veg,species=="Lavandula sp.")
veg %>%
filter(species=="Lavandula sp.")%>%
kruskal.test(height ~ tx_soil)
dunnTest(vegLavonly$height ~ vegLavonly$tx_soil, method = "bh")
veg %>%
filter(species=="Lavandula sp.")%>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegLavonly$abundance ~ vegLavonly$tx_soil, method = "bh")
veg %>%
filter(species=="Lavandula sp.")%>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegLavonly$cover_class_med  ~ vegLavonly$tx_soil, method = "bh")
vegAnnonly <- filter(veg,species=="Festuca pratensis")
veg %>%
filter(species=="Festuca pratensis")%>%
kruskal.test(height ~ tx_soil)
dunnTest(vegAnnonly$height ~ vegAnnonly$tx_soil, method = "bh")
veg %>%
filter(species=="Festuca pratensis")%>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegAnnonly$abundance ~ vegAnnonly$tx_soil, method = "bh")
veg %>%
filter(species=="Festuca pratensis")%>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegAnnonly$cover_class_med ~ vegAnnonly$tx_soil, method = "bh")
vegMixonly <- filter(veg,species=="Native seed mix")
vegMixonly <- vegMixonly[, c(1,2,3,4,5,6,8,10,11,12,13)]
vegMixonly %>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegMixonly$abundance ~ vegMixonly$tx_soil, method = "bh")
vegMixonly %>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegMixonly$cover_class_med ~ vegMixonly$tx_soil, method = "bh")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(FSA)
veg <- read.csv("Marianna Project/Marianna Veg Data.csv",
stringsAsFactors = TRUE)
veg$tx_soil_code <- as.factor(veg$tx_soil_code)
vegLBSonly<-filter(veg,species=="Schizachyrium scoparium")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegLBSonly$abundance ~ vegLBSonly$tx_soil, method = "bh")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegLBSonly$cover_class_med  ~ vegLBSonly$tx_soil, method = "bh")
vegMixonly <- filter(veg,species=="Native seed mix")
vegMixonly <- vegMixonly[, c(1,2,3,4,5,6,8,10,11,12,13)]
vegMixonly %>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegMixonly$abundance ~ vegMixonly$tx_soil, method = "bh")
vegMixonly %>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegMixonly$cover_class_med ~ vegMixonly$tx_soil, method = "bh")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegLBSonly$abundance ~ vegLBSonly$tx_soil, method = "bh")
library(dplyr)
library(ggplot2)
library(tidyverse)
library(FSA)
veg <- read.csv("Marianna Project/Marianna Veg Data.csv",
stringsAsFactors = TRUE)
veg$tx_soil_code <- as.factor(veg$tx_soil_code)
vegLBSonly<-filter(veg,species=="Schizachyrium scoparium")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegLBSonly$abundance ~ vegLBSonly$tx_soil, method = "bh")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegLBSonly$cover_class_med  ~ vegLBSonly$tx_soil, method = "bh")
vegMixonly <- filter(veg,species=="Native seed mix")
vegMixonly <- vegMixonly[, c(1,2,3,4,5,6,8,10,11,12,13)]
vegMixonly %>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegMixonly$abundance ~ vegMixonly$tx_soil, method = "bh")
vegMixonly %>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegMixonly$cover_class_med ~ vegMixonly$tx_soil, method = "bh")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(cover_class_med ~ tx_soil)
dunnTest(vegLBSonly$cover_class_med  ~ vegLBSonly$tx_soil, method = "bh")
veg %>%
filter(species=="Schizachyrium scoparium")%>%
kruskal.test(abundance ~ tx_soil)
dunnTest(vegLBSonly$abundance ~ vegLBSonly$tx_soil, method = "bh")
1+1
Name <- c("Korra", "Bolin", "Mako", "Asami", "Tenzin")
House <- c("Water", "Earth", "Fire", "Tech", "Air")
Score <- C(1,2,3,4,5)
Score <- c(1,2,3,4,5)
df <- data.frame(Name,House,Score)
print(df)
df[,1]
df$Name
df[2,]
df[4,3]
df[1,1]
str(df)
read.csv("Test_V_output.csv", sep=",", header=TRUE)
library(readr)
Test_V_output <- read_csv("Test_V_output.csv")
View(Test_V_output)
tot_score <- Test_V_output$`Total Score`
TotalScore[7,]
tot_score[7,]
tot_score[7,]
tot_score[7]
Test_V_output[7,]
tot_score[1:10]
tot_score[1:10,]
Test_V_output[1:10,]
mean(tot_score)
mean(Test_V_output$`Evidence Score`)
sum(Test_V_output$`Evidence Score`==7)
sum(Test_V_output$`Evidence Score`==2)
mean(tot_score)
sd(tot_score)
id <- Test_V_output$`Paper ID`
count(Test_V_output, `Paper ID`)
count(Test_V_output, Paper ID)
unique(Test_V_output, Paper ID)
unique(Test_V_output, `Paper ID`)
unique(id)
unique(Test_V_output$`Paper ID`)
Test_V_output$new_tot <- new_tot
new_tot <- (Test_V_output$`Kind Score`+(Test_V_output$`Evidence Score`*Test_V_output$`Match Score`))*Test_V_output$`Epistemic Value`
Test_
Test_V_output$new_tot <- Test_V_output$new_tot
Test_V_output$new_tot <- new_tot
Test_V_output <- subset(Test_V_output, select = -c("Location", "Cell Type", "Organism"))
Test_V_output <- subset(Test_V_output, select = -c(`Location`, `Cell Type`, `Organism`))
Test_V-ouyput <- Test_V_output[c(1:100),]
Test_V-output <- Test_V_output[c(1:100),]
Test_V_output <- Test_V_output[c(1:100),]
setwd("~/BIO-247/Lab/LabReports/Lab2")
write.csv(Test_V_output, "~/BIO-247/Lab/LabReports/Lab2")
write.csv(Test_V_output, "TestData.csv")
setwd("~/")
library(ggplot2)
Dataset_S1 <- read.csv("~/BIO-247/Lab/LabReports/Lab2/Dataset_S1.txt")
View(Dataset_S1)
position <- (Dataset_S1$end + Dataset_S1$start)/2
Dataset_S1$position <- position
Dataset_S1$diversity <- Dataset_S1$Pi / (10*1000)
ggplot(Dataset_S1, aes(x + position, y = diversity)) + geom_point()
ggplot(Dataset_S1, aes(x = position, y = diversity)) + geom_point()
ggplot(Test_V_output) + geom_density(aes(x=diversity), fill="black")
ggplot(Test_V_output) + geom_density(aes(x=`Total Score`), fill="black")
TestData <- Test_V_output
Dataset_S1 <- read.csv("~/BIO-247/Lab/Reports/Lab2/Dataset_S1.txt")
View(Dataset_S1)
colnames(Dataset_S1)[12] <- "percent.GC"
Dataset_S1$GC.binned <- cut(Dataset_S1$percent.GC, 5)
table(Dataset_S1$GC.binned)
cut(Dataset_S1$percent.GC, c(0, 25, 50, 75, 100))
library(ggplot2)
ggplot(Dataset_S1) + geom_bar(aes(x = GC.binned))
ggplot(Dataset_S1) + geom_bar(aes(x = pecent.GC))
ggplot(Dataset_S1) + geom_bar(aes(x = percent.GC))
knitr::opts_chunk$set(echo = TRUE)
#shirt <- "red"
#shirt <- "yellow"
#shirt <- "green"
shirt <- "blue"
#shirt <- "white"
if (shirt ==" red") {
print("apple")
} else if (shirt == "yellow")
print("banana")
} else if (shirt == "green")
if (shirt ==" red") {
print("apple")
} else if (shirt == "yellow") {
print("banana")
} else if (shirt == "green") {
print("watermelon")
} else if (shirt == "blue") {
print("blueberries")
} else (shirt == "white") {
if (shirt =="red") {
print("apple")
} else if (shirt == "yellow") {
print("banana")
} else if (shirt == "green") {
print("watermelon")
} else if (shirt == "blue") {
print("blueberries")
} else (shirt == "white") {
print("egg whites")
}
if (shirt =="red") {
print("apple")
} else if (shirt == "yellow") {
print("banana")
} else if (shirt == "green") {
print("watermelon")
} else if (shirt == "blue") {
print("blueberries")
} else  {
print("egg whites")
}
#shirt <- "red"
shirt <- "yellow"
#shirt <- "green"
#shirt <- "blue"
#shirt <- "white"
if (shirt =="red") {
print("apple")
} else if (shirt == "yellow") {
print("banana")
} else if (shirt == "green") {
print("watermelon")
} else if (shirt == "blue") {
print("blueberries")
} else  {
print("egg whites")
}
stop <- sample(1:1000, 1)
stop <- sample(1:1000, 1)
unique(Test_V_output$`Paper ID`)
NewID <- unique(Test_V_output$`Paper ID`)
NewID <- unlist(NewID)
NewID
strspilt(NewID)
strsplit(NewID)
?strsplit
strsplit(NewID, ",")
?unlist
?strsplit
?gsub
knitr::opts_chunk$set(echo = TRUE)
Test_V_output$`Paper ID`<- gsub("\\[", "", Test_V_output$`Paper ID`)
Test_V_output$`Paper ID`<- gsub("\\]", "", Test_V_output$`Paper ID`)
Test_V_output$`Paper ID`<- gsub("\\`", "", Test_V_output$`Paper ID`)
split_ID <-  unlist(strsplit(Test_V_output$`Paper ID`, ","))
Test_V_output$`Paper ID`<- gsub("\\[", "", Test_V_output$`Paper ID`)
Test_V_output$`Paper ID`<- gsub("\\]", "", Test_V_output$`Paper ID`)
Test_V_output$`Paper ID`<- gsub("\\'", "", Test_V_output$`Paper ID`)
split_ID <-  unlist(strsplit(Test_V_output$`Paper ID`, ","))
?append
print(unlist)(strsplit(Test_V_output$`Paper ID`, ","))
length(unique(split_ID))
Test_V_output$`Paper ID`<- gsub("\\[", "", Test_V_output$`Paper ID`)
Test_V_output$`Paper ID`<- gsub("\\]", "", Test_V_output$`Paper ID`)
Test_V_output$`Paper ID`<- gsub("\\'", "", Test_V_output$`Paper ID`)
Test_V_output$`Paper ID`<- gsub(" ", "", Test_V_output$`Paper ID`)
split_ID <-  unlist(strsplit(Test_V_output$`Paper ID`, ","))
length(unique(split_ID))
print(length(unlist(strsplit(Test_V_output$`Paper ID`, ","))))
print(length(unique(unlist(strsplit(Test_V_output$`Paper ID`, ","))))
print(length(unique(unlist(strsplit(Test_V_output$`Paper ID`, ",")))))
Test_V_output$`Target ID`
knitr::opts_chunk$set(echo = TRUE)
TestData <- read.csv(file="Test_V_output.csv", sep=",", header = TRUE)
tot_scores <- TestData$Total.Score
rm(HOuse,Name,Score,tot_scores)
rm(House)
rm(id, split_ID)
TestData[7,]$Target.ID
TestData[7,]$Source.ID
TestData[7,]$Total.Score
mean(Test_V_output$`Total Score`)
sd(Test_V_output$`Total Score`)
?strsplit
?unique
Test_V_output$Paper.ID <- gsub("\\[", "", Test_V_output$Paper.ID)
TestData$Paper.ID <- gsub("\\[", "", TestData$Paper.ID)
TestData$Paper.ID <- gsub("\\]", "", TestData$Paper.ID)
TestData$Paper.ID <- gsub("\\'", "", Test_V_output$Paper.ID)
TestData$Paper.ID <- gsub(" ", "", Test_V_output$Paper.ID)
TestData$Paper.ID <- gsub("\\[", "", TestData$Paper.ID)
TestData$Paper.ID <- gsub("\\]", "", TestData$Paper.ID)
TestData$Paper.ID <- gsub("\\'", "", TestData$Paper.ID)
TestData$Paper.ID <- gsub(" ", "", TestData$Paper.ID)
print(length(unique(unlist(strsplit(TestData$Paper.ID, ",")))))
knitr::opts_chunk$set(echo = TRUE)
TestData <- read.csv(file="Test_V_output.csv", sep=",", header = TRUE)
tot_scores <- TestData$Total.Score
TestData[7,]$Target.ID
TestData[7,]$Source.ID
TestData[7,]$Total.Score
mean(Test_V_output$`Total Score`)
sd(Test_V_output$`Total Score`)
TestData$Paper.ID <- gsub("\\[", "", TestData$Paper.ID)
TestData$Paper.ID <- gsub("\\]", "", TestData$Paper.ID)
TestData$Paper.ID <- gsub("\\'", "", TestData$Paper.ID)
TestData$Paper.ID <- gsub(" ", "", TestData$Paper.ID)
print(length(unique(unlist(strsplit(TestData$Paper.ID, ",")))))
NewScore <- (TestData$Kind+(TestData$Evidence*TestData$Match))*TestData$Epistemic
NewScore <- (TestData$Kind.Score+(TestData$Evidence.Score*TestData$Match.Score))*TestData$Epistemic.Value
TestData$NewScore <- NewScore
TestData <- subset(TestData, select= c("location", "cell.type", "organism"))
?subset
TestData <- subset(TestData, TestData, select= c("location", "cell.type", "organism"))
TestData <- subset(TestData, select= -c("location", "cell.type", "organism"))
TestData <- subset(TestData, select= -c("Location", "Cell.Type", "Organism"))
TestData <- subset(TestData, select= -c("Location", "Cell.Type", "Organism"))
TestData <- subset(TestData, select= -c("Location", "Cell.Type", "Organism"))
TestData <- TestData[1:100,]
TestData <- subset(TestData, select = -c("Location", "Cell.Type", "Organism"))
x <- 1,2,3
x <- c(1,2,3)
y <- c(1,2,3)
z <- c(1,2,3)
test <- data.frame(x,y,z)
test <- subset(test, -c(X,y))
TestData <- subset(TestData, select = -c("TestData$Location", "TestData$Cell.Type", "TestData$Organism"))
TestData <- subset(TestData, select = -c("Location", "Cell.Type", "Organism"))
TestData <- TestData[,!(names(TestData) %in% c("Location","Cell.Type, Organism"))]
?names
?%in%
TestData <- read.csv(file="Test_V_output.csv", sep=",", header = TRUE)
knitr::opts_chunk$set(echo = TRUE)
TestData <- read.csv(file="Test_V_output.csv", sep=",", header = TRUE)
NewScore <- (TestData$Kind.Score+
(TestData$Evidence.Score*TestData$Match.Score))*TestData$Epistemic.Value
TestData$NewScore <- NewScore
TestData$NewScore == TestData$Total.Score
setwd("~/BIO-247/Lab/Reports/Lab3")
